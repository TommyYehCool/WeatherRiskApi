version = '1.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Version settings
ext {
	lineBotVersion = '1.6.0'
	xchangeVersion = '4.2.0'
	stormpathVersion = '1.2.3'
	jbcryptVersion = '0.3m'
	lombokVersion = '1.16.10'
	swaggerVersion = '2.2.2'
	apacheCommonsIoVersion = '2.5'
	apacheCommonsCompressVersion = '1.13'
	apacheHttpClientVersion = '4.5.2'
	zxingVersion = '3.3.0'
	myUtilsVersion = '1.1.2'
	
	junitVersion = '4.+'
}

buildscript {
	ext {
		springBootVersion = '1.4.3.RELEASE'
	}

    repositories {
    	jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { 
    	url "https://jitpack.io" 
    }
}

javadoc {
    options {
        failOnError = false
        encoding = "UTF-8"    
        docEncoding = "UTF-8" 
        charSet = "UTF-8" 
        linkSource = true
    }
}

springBoot {
    mainClass = "com.weatherrisk.api.Application"
}

dependencies {
	// --------- Spring Boot ---------
    compile "org.springframework.boot:spring-boot-starter-web"
	compile "org.springframework.boot:spring-boot-starter-security"
	compile "org.springframework.boot:spring-boot-starter-mail"
	compile "org.springframework.boot:spring-boot-starter-data-mongodb"
	compile "org.springframework.boot:spring-boot-starter-test"
	
	// --------- line bot spring boot ---------
	compile "com.linecorp.bot:line-bot-spring-boot:${lineBotVersion}"
	
	// --------- https://github.com/timmolter/XChange ---------
	compile "org.knowm.xchange:xchange-core:${xchangeVersion}"
	compile "org.knowm.xchange:xchange-examples:${xchangeVersion}"
	
	// --------- Stormpath ---------
	compile "com.stormpath.spring:stormpath-spring-security-webmvc-spring-boot-starter:${stormpathVersion}"
	compile "com.stormpath.sdk:stormpath-sdk-httpclient:${stormpathVersion}"
	compile "com.stormpath.spring:stormpath-thymeleaf-spring-boot-starter:${stormpathVersion}"

    // --------- Use to encrypt/decrypt ---------
	compile "org.mindrot:jbcrypt:${jbcryptVersion}"

	// --------- https://projectlombok.org/ --------- 
	compile "org.projectlombok:lombok:${lombokVersion}"
	
	// --------- 自動產生 RESTapi 文件 ---------
	compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
	compile "io.springfox:springfox-swagger2:${swaggerVersion}"
	
	// --------- Apache commons-io ----------
	compile "commons-io:commons-io:${apacheCommonsIoVersion}"
	
	// --------- Apache commons-compress ----------
	compile "org.apache.commons:commons-compress:${apacheCommonsCompressVersion}"
	
	// --------- Apache httpclient ----------
	compile "org.apache.httpcomponents:httpclient:${apacheHttpClientVersion}"
	
	// --------- google customsearch (不知道怎麼用, 先留著, 好研究怎麼用) ---------
	compile "com.google.apis:google-api-services-customsearch:v1-rev53-1.22.0"
	
	// --------- QR Code Generator ---------
	compile "com.google.zxing:core:${zxingVersion}"
	
	// --------- Tommy Utils ----------
	compile "com.github.TommyYehCool:MyUtils:${myUtilsVersion}"
	
	// --------- JUnit --------- 
    testCompile "junit:junit:${junitVersion}"
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.14.1'
}
